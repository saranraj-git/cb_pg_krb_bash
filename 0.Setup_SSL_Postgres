#!/usr/bin/env bash

echo "======= Installing openssl ========"
yum -y -q install openssl

echo "======= Generating CA cert & Key =="

mkdir -p /var/lib/CA
openssl genrsa -out /var/lib/CA/rootCA.key 2048
openssl req -x509 -new -key /var/lib/CA/rootCA.key -days 365 -out /var/lib/CA/rootCA.crt 

echo "======= Generating Postgres Server cert ====="
mkdir -p /var/lib/CA/server
openssl genrsa -out /var/lib/CA/server/server.key 2048
openssl req -new -key /var/lib/CA/server/server.key -out /var/lib/CA/server/server.csr -subj '/CN=$(hostname -f)'
openssl x509 -req -in server.csr -CA /var/lib/CA/rootCA.crt -CAkey /var/lib/CA/rootCA.key -CAcreateserial -out /var/lib/CA/server/server.crt -days 3650

echo "======= Generating Client Cert ======"
mkdir -p /var/lib/CA/client  
openssl genrsa -out /var/lib/CA/client/client.key 2048
openssl req -new -key /var/lib/CA/client/client.key -out /var/lib/CA/client/client.csr -subj '/CN=$1'
openssl x509 -req -in /var/lib/CA/client/client.csr -CA /var/lib/CA/rootCA.crt -CAkey /var/lib/CA/rootCA.key -CAcreateserial -out /var/lib/CA/client/client.crt -days 3650

echo "=== copying the certificate ========="
cp /var/lib/CA/rootCA.crt /var/lib/pgsql/data/
cp /var/lib/CA/server/server.crt /var/lib/pgsql/data/
cp /var/lib/CA/server/server.key /var/lib/pgsql/data/
chown postgres.postgres /var/lib/pgsql/data/rootCA.crt
chown postgres.postgres /var/lib/pgsql/data/server.crt
chown postgres.postgres /var/lib/pgsql/data/server.key 
chmod 600 /var/lib/pgsql/data/server.key

echo " updating the Postgres Server config files ===="

sed -i 's/#ssl = off/ssl = on/g' /var/lib/pgsql/data/postgresql.conf
sed -i "s/#ssl_ciphers =/ssl_ciphers =/g" /var/lib/pgsql/data/postgresql.conf
sed -i 's/#ssl_renegotiation_limit = 0/ssl_renegotiation_limit = 512MB/g' /var/lib/pgsql/data/postgresql.conf
sed -i "s/#ssl_ca_file = ''/ssl_ca_file = 'rootCA.crt'/g" /var/lib/pgsql/data/postgresql.conf
sed -i "s/#ssl_cert_file = 'server.crt'/ssl_cert_file = 'server.crt'/g" /var/lib/pgsql/data/postgresql.conf
sed -i "s/#ssl_key_file = 'server.key'/ssl_key_file = 'server.key'/g" /var/lib/pgsql/data/postgresql.conf


sed -i "s/host    all/host  all   all 127.0.0.1/32  trust/g" /var/lib/pgsql/data/pg_hba.conf
echo "hostssl   all   all   0.0.0.0/0   trust clientcert=1/g" >> /var/lib/pgsql/data/pg_hba.conf





chown postgres.postgres /var/lib/pgsql/data/server.key
chown postgres.postgres /var/lib/pgsql/data/rootCA.crt
chown postgres.postgres /var/lib/pgsql/data/server.crt

: '
echo "== Updating Postgres Config files ==="
sed -i 's/password/md5 clientcert=1/g' /var/lib/pgsql/data/pg_hba.conf
sed -i 's/host/hostssl/g' /var/lib/pgsql/data/pg_hba.conf
sed -i 's/#ssl = off/ssl = on/g' /var/lib/pgsql/data/postgresql.conf
sed -i "s/#ssl_ca_file = ''/ssl_ca_file = 'root.crt'/g" /var/lib/pgsql/data/postgresql.conf
'

echo "== Restarting Postgres service ===="
systemctl restart postgresql

echo "== Generating Client Cert =========="
yum -y -q install httpd
systemctl start httpd
systemctl enable httpd

openssl genrsa -des3 -passout pass:P@ssw0rd123 -out /tmp/pgClient.key 2048
openssl rsa -in /tmp/pgClient.key -passin pass:P@ssw0rd123 -out /tmp/pgClient.key     
openssl req -new -key /tmp/pgClient.key  -out /tmp/pgClient.csr -subj '/C=AU/ST=NSW/L=Sydney/O=myorg/CN=mysite.com/emailAddress=mail@nodomain.com'
openssl x509 -req -in /tmp/pgClient.csr -CA /var/lib/pgsql/data/root.crt -CAkey /var/lib/pgsql/data/server.key -out /var/www/html/pgClient.crt -CAcreateserial
cp /var/www/html/pgClient.crt /tmp/pgClient.crt && chmod 400 /tmp/pgClient.crt
chown postgres.postgres /tmp/pgClient.crt
systemctl restart httpd

echo "Client cert can be downloaded from :"
echo "wget http://$(hostname -f)/pgClient.crt"

# ========

: '
# ============

mkdir -p /var/lib/CA && cd /var/lib/CA

openssl genrsa -out rootCA.key 2048

openssl req -x509 -new -key rootCA.key -days 365 -out rootCA.crt 

# ============

mkdir -p /var/lib/CA/server && cd /var/lib/CA/server

openssl genrsa -out server.key 2048

openssl req -new -key server.key -out server.csr -subj '/CN=pgsrj.field.hortonworks.com'

openssl x509 -req -in server.csr -CA /var/lib/CA/rootCA.crt -CAkey /var/lib/CA/rootCA.key -CAcreateserial -out server.crt -days 3650

# ==== Client cert ====

mkdir -p /var/lib/CA/client && cd /var/lib/CA/client 

openssl genrsa -out client.key 2048

openssl req -new -key client.key -out client.csr -subj '/CN=cbrksrj.field.hortonworks.com'

openssl x509 -req -in client.csr -CA /var/lib/CA/rootCA.crt -CAkey /var/lib/CA/rootCA.key -CAcreateserial -out client.crt -days 5000

# ====== copying the certificate 

cd /var/lib/pgsql/data/
cp /var/lib/CA/rootCA.crt .
cp /var/lib/CA/server/server.crt .
cp /var/lib/CA/server/server.key .
chmod 600 server.key

# ====== Updating the config files 

vim /var/lib/pgsql/data/postgresql.conf

listen_addresses = '*'

ssl = on
ssl_ciphers = 'HIGH:MEDIUM:*'
ssl_renegotiation_limit = 512MB
ssl_cert_file = 'server.crt'
ssl_key_file = 'server.key'
ssl_ca_file = 'rootCA.crt'

------------------------------------------
vi /var/lib/pgsql/data/pg_hba.conf

host  all   all 127.0.0.1/32  trust

hostssl	all	all	0.0.0.0/0	trust clientcert=1

chown postgres.postgres /var/lib/pgsql/data/server.key
chown postgres.postgres /var/lib/pgsql/data/rootCA.crt
chown postgres.postgres /var/lib/pgsql/data/server.crt

systemctl restart postgresql

yum -y install httpd
mkdir -p /var/www/html/pgClientcerts
cp /var/lib/CA/client/client.crt /var/www/html/pgClientcerts/client.crt
cp /var/lib/CA/rootCA.crt /var/www/html/pgClientcerts/rootCA.crt 
cp /var/lib/CA/client/client.key /var/www/html/pgClientcerts/client.key
ll /var/www/html/pgClientcerts
systemctl restart httpd

# ===== Go to ur client machine

mkdir ~/.postgresql

wget http://pgsrj.field.hortonworks.com/pgClientcerts/rootCA.crt -O ~/.postgresql/root.crt

wget http://pgsrj.field.hortonworks.com/pgClientcerts/client.crt -O ~/.postgresql/postgresql.crt

wget http://pgsrj.field.hortonworks.com/pgClientcerts/client.key -O ~/.postgresql/postgresql.key

chmod 600 ~/.postgresql/postgresql.key

psql -h pgsrj.field.hortonworks.com -U cbadmin cbdb
'
